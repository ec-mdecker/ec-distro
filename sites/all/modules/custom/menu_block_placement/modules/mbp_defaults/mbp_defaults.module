<?php

/**
 * Adds the new field name to the array variable or sets the variable with the field name
 *
 *  Implements hook_field_create_field().
 */
function mbp_defaults_field_create_field($field) {
  if ($field['type'] == 'menu_block_placement_reference') {
    $field_name = $field['field_name'];
    if (variable_get('mbp_defaults')) {
      $fields = variable_get('mbp_defaults');
      $fields[$field['id']] = $field_name;
      variable_set('mbp_defaults', $fields);
    }
    else {
      variable_set('mbp_defaults', array($field['id'] => $field_name));
    }
  }
}

/**
 * Removes the field name from the array variable
 *
 *  Implements hook_field_delete_field().
 */
function mbp_defaults_field_delete_field($field) {
  if ($field['type'] == 'menu_block_placement_reference') {
    $fields = variable_get('mbp_defaults');
    unset($fields[$field['id']]);
    variable_set('mbp_defaults', $fields);
  }
}

/**
 *  Implements hook_views_api().
 */
function mbp_defaults_views_api() {
  return array(
    'api' => 3,
  );
}

/**
 * If a the view maintains its default state, the query will be altered
 * to move the contextual filters into the normal filters.
 * This helps when the 'Show only on selected pages' checkbox is present.
 *
 *  Implements hook_views_query_alter().
 */
function mbp_defaults_views_query_alter(&$view, &$query) {
  $tags = explode(', ', $view->tag);
  if (in_array('mbp_defaults', $tags) && $view->type == 'Default') {
    //if the view contains a region and individual_pages fields
    if (in_array('mbp_regions', $tags) && in_array('mbp_individual', $tags)) {
      if (isset($query->where[1]) && isset($query->where[0]) && isset($query->where[0]['conditions'][0]) && isset($query->where[0]['conditions'][1]) && isset($query->where[0]['conditions'][2])) {
        $query->group_operator = 'OR';
        $query->where[] = $query->where[1];
        $query->where[2]['conditions'][1]['value'] = '0';
        $query->where[1]['conditions'][] = $query->where[0]['conditions'][0];
        $query->where[2]['conditions'][] = $query->where[0]['conditions'][0];
        $query->where[1]['conditions'][] = $query->where[0]['conditions'][1];
        $query->where[2]['conditions'][] = $query->where[0]['conditions'][2];
        unset($query->where[0]);
      }
    }
    //if the view contains only the individual_pages field
    elseif (in_array('mbp_individual', $tags)) {
      $query->group_operator = 'OR';
      $query->where[] = $query->where[1];
      $query->where[2]['conditions'][1]['value'] = '0';
      $query->where[1]['conditions'][] = $query->where[0]['conditions'][0];
      $query->where[2]['conditions'][] = $query->where[0]['conditions'][1];
      unset($query->where[0]);
    }
  }
}

/**
 * Structures the blocks info. If a MBP field contains the region select box,
 * a block will be created for each region in the select list.
 * If the region select box does not exist, a single block will be created.
 *
 *  Implements hook_block_info().
 */
function mbp_defaults_block_info() {
  $regions = variable_get('mbp_regions');
  $fields = variable_get('mbp_defaults');

  $blocks = array();
  foreach ($fields as $fid => $field) {
    //checks if the field contains the region select list
    $field_settings = field_info_field($field);
    if ($field_settings['settings']['default_selects']['region']) {
      //creates a block for reach region
      foreach ($regions as $key => $label) {
        $blocks['mbp-' . $fid . '-' . $key] = array(
          'info' => t('MBP-' . substr($field, 6) . '-' . $label),
          'cache' => DRUPAL_NO_CACHE,
        );
      }
    }
    else {
      //creates a single block to be placed on any region
      $blocks['mbp-' . $fid] = array(
        'info' => t('MBP-' . substr($field, 6)),
        'cache' => DRUPAL_NO_CACHE,
      );
    }

  }
  return $blocks;
}

/**
 * Sets the block settings for the region
 *
 *  Implements hook_block_info_alter().
 */
function mbp_defaults_block_info_alter(&$blocks, $theme, $code_blocks) {
  if (isset($blocks['mbp_defaults']) && !empty($blocks['mbp_defaults'])) {
    foreach ($blocks['mbp_defaults'] as &$block) {
      if (strpos($block['delta'], '-', 5)) {
        //checks if setting the region for the default theme, not the admin theme
        if (variable_get('theme_default', NULL) == $block['theme']) {
          $region = substr($block['delta'], strpos($block['delta'], '-', 5) + 1);
          $block['region'] = $region;
          $block['status'] = '1';
          $block['pages'] = 'node/*/edit';
          $block['weight'] = 10;
          $block['custom'] = 1;
        }
      }
    }
  }
}

/**
 * Constructs the renderable array from the quicktabs module
 *
 *  Implements hook_block_view().
 */
function mbp_defaults_block_view($delta = '') {
  $fields = variable_get('mbp_defaults');
  $field_id = substr($delta, 4, strpos($delta . '-', '-', 5) - 4);
  $field_name = isset($fields[$field_id]) ? $fields[$field_id] : '';
  $region = substr($delta, strpos($delta, '-', 5) + 1);

  if ($field_name != '') {
    $block = array(
      'subject' => t(''),
      'content' => mbp_defaults_build_quicktabs($field_id, $field_name, $region),
    );
    return $block;
  }
  else {
    return array();
  }
}

/**
 *  Implements hook_flush_caches().
 */
function mbp_defaults_flush_caches() {
  db_delete('block')
    ->condition('module', 'mbp_defaults')
    ->condition('custom', '1')
    ->execute();
}

/*
 * Helper Function that contains all the quicktabs settings information
 */
function mbp_defaults_build_quicktabs($field_id, $field_name, $region) {
  $field_settings = field_info_field($field_name);
  $settings = array(
    'style' => 'Zen',
    'renderer' => 'quicktabs',
    'hide_empty_tabs' => TRUE,
    'default_tab' => 0,
    'title' => 'Test Quicktabs',
    'options' => array(),
  );
  $tabs = array(
    0 => array(
      'vid' => 'mbp_' . $field_id,
      'display' => 'block',
      'args' => $field_settings['settings']['default_selects']['region'] ? $region : '',
      'title' => 'Display',
      'weight' => '-100',
      'type' => 'view',
    ),
    1 => array(
      'vid' => 'mbp_' . $field_id,
      'display' => 'block_1',
      'args' => $field_settings['settings']['default_selects']['region'] ? $region : '',
      'title' => 'Sort/Edit',
      'weight' => '-99',
      'type' => 'view',
    ),
  );
  $qt_name = $field_id . '-' . $region;

  return quicktabs_build_quicktabs($qt_name, $settings, $tabs);
}